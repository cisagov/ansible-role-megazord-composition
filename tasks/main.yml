---
# tasks file for megazord composition
- name: Load var file
  ansible.builtin.include_vars:
    file: main.yml

- name: Create the /tools/Megazord-Composition directory
  ansible.builtin.file:
    mode: 0755
    path: /tools/Megazord-Composition
    state: directory

- name: Download and tar the Megazord-Composition
  ansible.builtin.unarchive:
    src: https://github.com/xvxd4sh/megazord-composition/tarball/develop
    dest: /tools/Megazord-Composition
    remote_src: yes
    extra_opts:
      - "--strip-components=1"
    creates: /tools/Megazord-Composition/docker-compose.yml

- name: Run SourcePoint
  ansible.builtin.command: "./SourcePoint -Host {{ domain_name }} -Outfile SourcePoint-{{ ansible_date_time.date }}.profile -Injector NtMapViewOfSection -Stage True"
  args:
    chdir: /tools/SourcePoint
    creates: "/tools/SourcePoint/SourcePoint-{{ ansible_date_time.date }}.profile"

#Edit cs2modrewrite python code so that it always uses utf8 encoding
#See issue for more info:
## https://github.com/hsfetty/ansible-role-megazord-composition/issues/19
- name: Standardize encoding in cs2modrewrite
  ansible.builtin.replace:
    path: /tools/cs2modrewrite/cs2modrewrite.py
    regexp: 'profile = open\(args.inputfile,"r"\)'
    replace: 'profile = open(args.inputfile,"r",encoding="utf-8")'

#Edit cs2modrewrite python code so that it always uses utf8 decoding
#See issue for more info:
## https://github.com/hsfetty/ansible-role-megazord-composition/issues/19
- name: Decoding of file contents in cs2modrewrite
  ansible.builtin.replace:
    path: /tools/cs2modrewrite/cs2modrewrite.py
    regexp: 'contents = profile.read\(\)\n'
    replace: 'contents = profile.read().decode("utf-8")'

- name: Run cs2modrewrite.py
  ansible.builtin.command: 'python3 cs2modrewrite.py -i /tools/SourcePoint/SourcePoint-{{ ansible_date_time.date }}.profile -c https://{{ domain_name }} -r https://{{ redirect_location }} -o /tools/Megazord-Composition/src/apache2/.htaccess'
  args:
    chdir: '/tools/cs2modrewrite'
    creates: '/tools/Megazord-Composition/src/apache2/.htaccess'
  environment: #Environment variables allow older versions of python to read the profile
    LANG: "en_US.UTF-8"
    LC_ALL: "en_US.UTF-8"
    LC_CTYPE: "en_US.UTF-8"

# Remove the 'P' for proxy because it interferes with the webserver configuration
# Issue described here:
  # https://github.com/hsfetty/ansible-role-megazord-composition/issues/8
- name: Replace instances of 'P' (Proxy)
  ansible.builtin.replace:
    path: /tools/Megazord-Composition/src/apache2/.htaccess
    regexp: \[P,L]
    replace: [L]

#TODO: Change location and add check for if the file is present
- name: Copy profile into place
  copy:
    src: "{{ default_profile }}"
    dest: "/tools/{{ default_profile }}"
    mode: 0644

#The ansible slurp module will read the file into base64 encoded data
- name: Extract keystore and password from user's profile
  ansible.builtin.slurp:
    src: "/tools/{{ default_profile }}"
  register: encoded_profile

#Decode the encoded profile and split on new line to extract the last 4 lines later
- name: Decode the profile and split on new line
  set_fact:
    https_certificate: "{{ encoded_profile['content'] | b64decode | split('\n') }}"

#Get the last 6 lines of the profile, which contains the https-certificate keystore
#and password, join it to a string, and append it to the SourcePoint profile
#Ansible fails if we try to do all of the manipulation in the https_certificate variable
- name: Append certificate info to SourcePoint generated profile
  ansible.builtin.blockinfile:
    path: "/tools/SourcePoint/SourcePoint-{{ ansible_date_time.date }}.profile"
    block: |
      "{{ https_certificate[-6:] | join('\n') }}"

# Restart docker daemon
- name: Restart docker daemon
  ansible.builtin.service:
    name: dockerd
    daemon_reload: yes
    state: started
  register: docker_state


# Check to see what containers are running and save output
- name: Run docker ps to check if containers are already running
  ansible.builtin.command: 'docker ps'
  register: ps_output
  changed_when: False

# Run docker compose to build and run the containers
- name: Run docker compose build and docker compose up
  ansible.builtin.command: 'docker compose up -f /tools/Megazord-Composition/docker-compose.yml'
  register: command_output
  when: "'coredns' not in ps_output and 'apache2' not in ps_output"
  failed_when: "when 'ERROR' in command_output"
